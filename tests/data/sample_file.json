[
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "import"
    },
    {
        "Identifier": "Main"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "module"
    },
    {
        "Identifier": "Sample"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helloWorld"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "String"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Give a simple Hello, world!"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helloWorld"
    },
    {
        "Symbol": "="
    },
    {
        "StringConstant": "Hello, world!"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "quickMaths"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Show simple mathematical operations in a func."
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "quickMaths"
    },
    {
        "Symbol": "="
    },
    {
        "IntConstant": "1"
    },
    {
        "Symbol": "+"
    },
    {
        "IntConstant": "2"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "testBool"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Boolean"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Store the false value"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "testBool"
    },
    {
        "Symbol": "="
    },
    {
        "Keyword": "false"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "square"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Take an integer and multiply it by itself.\n\nArguments:\n    x: The number to square.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "square"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "*"
    },
    {
        "Identifier": "x"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "reverse"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "String"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "String"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Reverses the string.\n\nArguments:\n    x: The string to reverse.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "reverse"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "x"
    },
    {
        "StringConstant": ""
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "StringConstant": ""
    },
    {
        "Identifier": "string"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "string"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "x"
    },
    {
        "Identifier": "string"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "string"
    },
    {
        "Symbol": "+"
    },
    {
        "Identifier": "x"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": ":"
    },
    {
        "Identifier": "xs"
    },
    {
        "Identifier": "string"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "xs"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "string"
    },
    {
        "Symbol": "+"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "testNothing"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Boolean"
    },
    {
        "Symbol": "?"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Stores an optional boolean value when assigned 0."
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "testNothing"
    },
    {
        "IntConstant": "0"
    },
    {
        "Symbol": "="
    },
    {
        "Keyword": "true"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "testNothing"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "="
    },
    {
        "Keyword": "Nothing"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "map"
    },
    {
        "Keyword": "takes"
    },
    {
        "Symbol": "("
    },
    {
        "Keyword": "Callable"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": ")"
    },
    {
        "Keyword": "and"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "returns"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Generate a list with an applied function.\n\nArguments:\n    func: The function to run over every item in the list\n    x: The list to run the function on its items\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "map"
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "list"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "["
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ":"
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "["
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "]"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "filter"
    },
    {
        "Keyword": "takes"
    },
    {
        "Symbol": "("
    },
    {
        "Keyword": "Callable"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Boolean"
    },
    {
        "Symbol": ")"
    },
    {
        "Keyword": "and"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "returns"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Generate a list given a condition and an existing list.\n\nArguments:\n    f: The function to mark items as true or false\n    x: The list to run the function on its items\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "filter"
    },
    {
        "Identifier": "f"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "f"
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "list"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "?"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": ":"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ":"
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "?"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "func"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": ":"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "reduce"
    },
    {
        "Keyword": "takes"
    },
    {
        "Symbol": "("
    },
    {
        "Keyword": "Callable"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Keyword": "and"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": ")"
    },
    {
        "Keyword": "and"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "and"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "\\"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Anything"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Generate a single value from a list with a method of combination.\n\nArguments:\n    f: The function to combine values\n    x: The list to reduce to a single value\n    s: The starting value\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "reduce"
    },
    {
        "Identifier": "f"
    },
    {
        "Identifier": "x"
    },
    {
        "Identifier": "s"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "f"
    },
    {
        "Identifier": "x"
    },
    {
        "Identifier": "s"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "combinator"
    },
    {
        "Symbol": "["
    },
    {
        "Symbol": "]"
    },
    {
        "Identifier": "s"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "s"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "combinator"
    },
    {
        "Identifier": "i"
    },
    {
        "Identifier": "s"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "combinator"
    },
    {
        "Identifier": "i"
    },
    {
        "Identifier": "s"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "combinator"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ":"
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "s"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "combinator"
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "combinator"
    },
    {
        "Identifier": "i"
    },
    {
        "Identifier": "s"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "health"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Symbol": "?"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Assign the current health. If no value is provided, 100 is used.\n\nArguments:\n    default: The value to set the health to. Optional.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "health"
    },
    {
        "Identifier": "value"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "value"
    },
    {
        "Symbol": "?"
    },
    {
        "Symbol": "?"
    },
    {
        "IntConstant": "100"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "takeDamage"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Keyword": "and"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Symbol": "?"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Subtract a health amount, either randomly or by a set amount.\n\nArguments:\n    curr: The current health to subtract from.\n    by: The health to subtract by, if any. Optional.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "takeDamage"
    },
    {
        "Identifier": "curr"
    },
    {
        "Identifier": "by"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "curr"
    },
    {
        "Identifier": "by"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "h"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "h"
    },
    {
        "Symbol": "-"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "randInt"
    },
    {
        "IntConstant": "1"
    },
    {
        "IntConstant": "5"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "h"
    },
    {
        "Identifier": "a"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "h"
    },
    {
        "Symbol": "-"
    },
    {
        "Identifier": "a"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "expressions"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Keyword": "returns"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "String"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "expressions"
    },
    {
        "Symbol": "="
    },
    {
        "Symbol": "["
    },
    {
        "StringConstant": "Oh"
    },
    {
        "Symbol": ","
    },
    {
        "StringConstant": "Ooh"
    },
    {
        "Symbol": ","
    },
    {
        "StringConstant": "Sure"
    },
    {
        "Symbol": ","
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "ohYeah"
    },
    {
        "Keyword": "takes"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "?"
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "returns"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "String"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Apply a 'yeah' to each string.\n\nArguments:\n    list: The list of expressions to add 'yeah' to\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "ohYeah"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "map"
    },
    {
        "Symbol": "("
    },
    {
        "Keyword": "lambda"
    },
    {
        "Identifier": "a"
    },
    {
        "Symbol": "-"
    },
    {
        "Symbol": ">"
    },
    {
        "Identifier": "a"
    },
    {
        "Symbol": "?"
    },
    {
        "StringConstant": ", yeah!"
    },
    {
        "Symbol": ":"
    },
    {
        "StringConstant": "Yeah!"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "list"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "lastDigit"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Get the last digit of a number."
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "lastDigit"
    },
    {
        "Identifier": "num"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "num"
    },
    {
        "Symbol": "%"
    },
    {
        "IntConstant": "10"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "butLastDigit"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Get everything but the last digit of the number."
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "butLastDigit"
    },
    {
        "Identifier": "num"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "num"
    },
    {
        "Symbol": "/"
    },
    {
        "IntConstant": "10"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "getDigitSum"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Gets the sum of the digits of a number.\n\nArguments:\n    number: The number to get the digit sum of.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "getDigitSum"
    },
    {
        "Identifier": "number"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "number"
    },
    {
        "IntConstant": "0"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "num"
    },
    {
        "Identifier": "result"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "number"
    },
    {
        "Symbol": "="
    },
    {
        "Symbol": "="
    },
    {
        "IntConstant": "0"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "?"
    },
    {
        "Identifier": "result"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": ":"
    },
    {
        "Identifier": "helper"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "butLastDigit"
    },
    {
        "Identifier": "num"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "result"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "lastDigit"
    },
    {
        "Identifier": "num"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "getLifePathNumber"
    },
    {
        "Keyword": "takes"
    },
    {
        "Symbol": "("
    },
    {
        "Keyword": "Integer"
    },
    {
        "Symbol": ","
    },
    {
        "Keyword": "Integer"
    },
    {
        "Symbol": ","
    },
    {
        "Keyword": "Integer"
    },
    {
        "Symbol": ")"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Gets the life path number by adding the digits of a tuple with\na birthdate.\n\nArguments:\n    birthdate: The birthdate to get the life path number of\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "getLifePathNumber"
    },
    {
        "Identifier": "month"
    },
    {
        "Symbol": ","
    },
    {
        "Identifier": "day"
    },
    {
        "Symbol": ","
    },
    {
        "Identifier": "year"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "getDigitSum"
    },
    {
        "Symbol": "("
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "getDigitSum"
    },
    {
        "Identifier": "month"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "+"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "getDigitSum"
    },
    {
        "Identifier": "day"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "+"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "getDigitSum"
    },
    {
        "Identifier": "year"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "for"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Keyword": "and"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Keyword": "and"
    },
    {
        "Symbol": "("
    },
    {
        "Keyword": "Callable"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "?"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Anything"
    },
    {
        "Symbol": "?"
    },
    {
        "Symbol": ")"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Iterate over a range and perform a task at each step.\n\nArguments:\n    start: The starting value.\n    end: The ending value.\n    task: The task to perform.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "for"
    },
    {
        "Identifier": "start"
    },
    {
        "Identifier": "end"
    },
    {
        "Identifier": "task"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "forHelper"
    },
    {
        "Identifier": "start"
    },
    {
        "Identifier": "start"
    },
    {
        "Identifier": "end"
    },
    {
        "Identifier": "task"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "forHelper"
    },
    {
        "Identifier": "i"
    },
    {
        "Identifier": "n"
    },
    {
        "Identifier": "j"
    },
    {
        "Identifier": "t"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": "="
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "?"
    },
    {
        "Identifier": "t"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": ":"
    },
    {
        "Identifier": "forHelper"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "+"
    },
    {
        "IntConstant": "1"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "n"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "j"
    },
    {
        "Symbol": "-"
    },
    {
        "IntConstant": "1"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "t"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "private"
    },
    {
        "Identifier": "villains"
    },
    {
        "Symbol": "="
    },
    {
        "Symbol": "["
    },
    {
        "StringConstant": "AEGIS"
    },
    {
        "Symbol": ","
    },
    {
        "StringConstant": "Gargamel"
    },
    {
        "Symbol": ","
    },
    {
        "StringConstant": "Chrysalis"
    },
    {
        "Symbol": "]"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "warnOfVillains"
    },
    {
        "Keyword": "takes"
    },
    {
        "Symbol": "["
    },
    {
        "Keyword": "String"
    },
    {
        "Symbol": "]"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "warnOfVillains"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "for"
    },
    {
        "IntConstant": "0"
    },
    {
        "Identifier": "range"
    },
    {
        "Symbol": "("
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "length"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "-"
    },
    {
        "IntConstant": "1"
    },
    {
        "Symbol": ")"
    },
    {
        "Identifier": "task"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "task"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "member"
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "["
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "]"
    },
    {
        "Identifier": "villains"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "?"
    },
    {
        "Keyword": "warn"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "list"
    },
    {
        "Symbol": "["
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "]"
    },
    {
        "Symbol": "+"
    },
    {
        "StringConstant": " is a villain!"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": ":"
    },
    {
        "Keyword": "log"
    },
    {
        "StringConstant": "Safe!"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "countToTen"
    },
    {
        "Keyword": "takes"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Nothing"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "countToTen"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "for"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ","
    },
    {
        "Identifier": "range"
    },
    {
        "IntConstant": "10"
    },
    {
        "Symbol": ","
    },
    {
        "Identifier": "task"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "task"
    },
    {
        "Symbol": "="
    },
    {
        "Keyword": "log"
    },
    {
        "Identifier": "i"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "type"
    },
    {
        "Identifier": "Side"
    },
    {
        "Symbol": "="
    },
    {
        "Keyword": "Float"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "type"
    },
    {
        "Identifier": "Radius"
    },
    {
        "Symbol": "="
    },
    {
        "Keyword": "Float"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "datatype"
    },
    {
        "Identifier": "Shape"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "Rectangle"
    },
    {
        "Identifier": "Side"
    },
    {
        "Identifier": "Side"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "or"
    },
    {
        "Identifier": "Ellipse"
    },
    {
        "Identifier": "Radius"
    },
    {
        "Identifier": "Radius"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "area"
    },
    {
        "Keyword": "takes"
    },
    {
        "Identifier": "Shape"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Float"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Get the area of a Shape\n\nArguments:\n    shape: The shape to get the area of.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "area"
    },
    {
        "Identifier": "shape"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "helper"
    },
    {
        "Identifier": "shape"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "area"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "Rectangle"
    },
    {
        "Identifier": "x"
    },
    {
        "Identifier": "y"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "x"
    },
    {
        "Symbol": "*"
    },
    {
        "Identifier": "y"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "area"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "Ellipse"
    },
    {
        "Identifier": "r"
    },
    {
        "Identifier": "q"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "r"
    },
    {
        "IntConstant": "1"
    },
    {
        "Symbol": "*"
    },
    {
        "Identifier": "r"
    },
    {
        "IntConstant": "2"
    },
    {
        "Symbol": "*"
    },
    {
        "Identifier": "pi"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "squareFactory"
    },
    {
        "Keyword": "takes"
    },
    {
        "Identifier": "Side"
    },
    {
        "Keyword": "returns"
    },
    {
        "Identifier": "Shape"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Generate a Rectangle shape with equal width and height."
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "squareFactory"
    },
    {
        "Identifier": "side"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "Rectangle"
    },
    {
        "Identifier": "side"
    },
    {
        "Identifier": "side"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "datatype"
    },
    {
        "Identifier": "IntegerTree"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "IntegerBranch"
    },
    {
        "Identifier": "IntegerNode"
    },
    {
        "Symbol": "?"
    },
    {
        "Identifier": "IntegerTree"
    },
    {
        "Identifier": "IntegerTree"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Keyword": "or"
    },
    {
        "Identifier": "IntegerLeaf"
    },
    {
        "Keyword": "Integer"
    },
    {
        "Symbol": "?"
    },
    {
        "LineReturn": "\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "addlapseTree"
    },
    {
        "Keyword": "takes"
    },
    {
        "Identifier": "IntegerTree"
    },
    {
        "Keyword": "returns"
    },
    {
        "Keyword": "Integer"
    },
    {
        "LineReturn": "\n"
    },
    {
        "DocstringConstant": "Traverses the IntegerTree and adds up all of the values.\n\nAny values that are Nothing will be substituted with 0.\n\nArguments:\n    tree: The tree to traverse.\n"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "addlapseTree"
    },
    {
        "Identifier": "tree"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "collapseHelper"
    },
    {
        "Identifier": "tree"
    },
    {
        "Keyword": "where"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "collapseHelper"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "IntegerLeaf"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "="
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": "?"
    },
    {
        "Identifier": "i"
    },
    {
        "Symbol": ":"
    },
    {
        "IntConstant": "0"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Identifier": "collapseHelper"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "IntegerBranch"
    },
    {
        "Identifier": "value"
    },
    {
        "Identifier": "t"
    },
    {
        "IntConstant": "1"
    },
    {
        "Identifier": "t"
    },
    {
        "IntConstant": "2"
    },
    {
        "Symbol": ")"
    },
    {
        "Symbol": "="
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "value"
    },
    {
        "Symbol": "?"
    },
    {
        "Identifier": "value"
    },
    {
        "Symbol": ":"
    },
    {
        "IntConstant": "0"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "collapseHelper"
    },
    {
        "Identifier": "t"
    },
    {
        "IntConstant": "1"
    },
    {
        "Symbol": ")"
    },
    {
        "LineReturn": "\n"
    },
    {
        "Symbol": "+"
    },
    {
        "Symbol": "("
    },
    {
        "Identifier": "collapseHelper"
    },
    {
        "Identifier": "t"
    },
    {
        "IntConstant": "2"
    },
    {
        "Symbol": ")"
    }
]